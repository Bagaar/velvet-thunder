{"version":3,"file":"velvet-checkbox.js","sources":["../../src/components/velvet-checkbox.gts"],"sourcesContent":["import { template as template_c6a72f494c294f9a8f60a259f5a57418 } from \"@ember/template-compiler\";\nimport { concat } from '@ember/helper';\nimport { on } from '@ember/modifier';\nimport Component from '@glimmer/component';\nimport { or } from 'ember-truth-helpers';\nimport { cn } from '../-private/helpers/cn.ts';\nimport type { Value as GroupValue, ValueAsArray as GroupValueAsArray, ValueAsObject as GroupValueAsObject } from './velvet-checkbox-group.gts';\nexport type Size = 'sm' | 'md' | 'lg';\nexport interface VelvetCheckboxSignature {\n    Args: {\n        /// Indicate if the checkbox is checked.\n        /// @default [false]\n        isChecked?: boolean;\n        /// Indicate if the checkbox is disabled.\n        /// @default [false]\n        isDisabled?: boolean;\n        /// Indicate if the checkbox is indeterminate.\n        /// @default [false]\n        isIndeterminate?: boolean;\n        /// The name of the checkbox.\n        /// @default [\"\"]\n        name?: string;\n        /// Handle the checkbox's `change` event.\n        /// @default [undefined]\n        onChange?: (value: boolean, event: Event) => void;\n        /// The size of the checkbox.\n        /// @default [\"md\"]\n        size?: Size;\n        privateGroupValue?: GroupValue;\n        privateGroupValueIsObject?: boolean;\n        privateInGroup?: boolean;\n        privateOnChangeGroup?: (value: GroupValue, event: Event) => void;\n    };\n    Blocks: {\n        /// The label of the checkbox.\n        default: [];\n    };\n    Element: HTMLInputElement;\n}\nexport default class VelvetCheckbox extends Component<VelvetCheckboxSignature> {\n    get groupValueAsArray() {\n        return (this.args.privateGroupValue || []) as GroupValueAsArray;\n    }\n    get groupValueAsObject() {\n        return (this.args.privateGroupValue || {}) as GroupValueAsObject;\n    }\n    get isCheckedInGroup() {\n        const name = this.args.name as string;\n        if (this.args.privateGroupValueIsObject) {\n            return this.groupValueAsObject[name] === true;\n        }\n        return this.groupValueAsArray.includes(name);\n    }\n    changeHandler = (event: Event)=>{\n        if (this.args.isDisabled === true) {\n            return;\n        }\n        const { checked } = event.target as HTMLInputElement;\n        const { privateInGroup, onChange, privateOnChangeGroup } = this.args;\n        if (privateInGroup && typeof privateOnChangeGroup === 'function') {\n            const { groupValueAsArray, groupValueAsObject } = this;\n            const { privateGroupValueIsObject, name } = this.args;\n            let groupValue;\n            if (privateGroupValueIsObject) {\n                groupValue = {\n                    ...groupValueAsObject,\n                    [name as string]: checked\n                };\n            } else if (checked) {\n                groupValue = [\n                    ...groupValueAsArray,\n                    name\n                ];\n            } else {\n                groupValue = groupValueAsArray.filter((n)=>n !== name);\n            }\n            privateOnChangeGroup(groupValue as GroupValue, event);\n        } else if (typeof onChange === 'function') {\n            onChange(checked, event);\n        }\n    };\n    static{\n        template_c6a72f494c294f9a8f60a259f5a57418(`\n    <label\n      class={{cn\n        \"velvet-checkbox\"\n        (concat \"velvet-checkbox-\" (or @size \"md\"))\n        (if @isDisabled \"velvet-checkbox-disabled\")\n      }}\n    >\n      <input\n        checked={{if @privateInGroup this.isCheckedInGroup @isChecked}}\n        class=\"velvet-checkbox-input form-checkbox\"\n        disabled={{@isDisabled}}\n        indeterminate={{@isIndeterminate}}\n        name={{@name}}\n        type=\"checkbox\"\n        {{on \"change\" this.changeHandler}}\n        ...attributes\n      />\n      {{yield}}\n    </label>\n  `, {\n            component: this,\n            eval () {\n                return eval(arguments[0]);\n            }\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3ZlbHZldC10aHVuZGVyL3ZlbHZldC10aHVuZGVyL3ZlbHZldC10aHVuZGVyL3NyYy9jb21wb25lbnRzL3ZlbHZldC1jaGVja2JveC5ndHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uY2F0IH0gZnJvbSAnQGVtYmVyL2hlbHBlcic7XG5pbXBvcnQgeyBvbiB9IGZyb20gJ0BlbWJlci9tb2RpZmllcic7XG5pbXBvcnQgQ29tcG9uZW50IGZyb20gJ0BnbGltbWVyL2NvbXBvbmVudCc7XG5pbXBvcnQgeyBvciB9IGZyb20gJ2VtYmVyLXRydXRoLWhlbHBlcnMnO1xuaW1wb3J0IHsgY24gfSBmcm9tICcuLi8tcHJpdmF0ZS9oZWxwZXJzL2NuLnRzJztcbmltcG9ydCB0eXBlIHtcbiAgVmFsdWUgYXMgR3JvdXBWYWx1ZSxcbiAgVmFsdWVBc0FycmF5IGFzIEdyb3VwVmFsdWVBc0FycmF5LFxuICBWYWx1ZUFzT2JqZWN0IGFzIEdyb3VwVmFsdWVBc09iamVjdCxcbn0gZnJvbSAnLi92ZWx2ZXQtY2hlY2tib3gtZ3JvdXAuZ3RzJztcblxuZXhwb3J0IHR5cGUgU2l6ZSA9ICdzbScgfCAnbWQnIHwgJ2xnJztcblxuZXhwb3J0IGludGVyZmFjZSBWZWx2ZXRDaGVja2JveFNpZ25hdHVyZSB7XG4gIEFyZ3M6IHtcbiAgICAvLy8gSW5kaWNhdGUgaWYgdGhlIGNoZWNrYm94IGlzIGNoZWNrZWQuXG4gICAgLy8vIEBkZWZhdWx0IFtmYWxzZV1cbiAgICBpc0NoZWNrZWQ_OiBib29sZWFuO1xuXG4gICAgLy8vIEluZGljYXRlIGlmIHRoZSBjaGVja2JveCBpcyBkaXNhYmxlZC5cbiAgICAvLy8gQGRlZmF1bHQgW2ZhbHNlXVxuICAgIGlzRGlzYWJsZWQ_OiBib29sZWFuO1xuXG4gICAgLy8vIEluZGljYXRlIGlmIHRoZSBjaGVja2JveCBpcyBpbmRldGVybWluYXRlLlxuICAgIC8vLyBAZGVmYXVsdCBbZmFsc2VdXG4gICAgaXNJbmRldGVybWluYXRlPzogYm9vbGVhbjtcblxuICAgIC8vLyBUaGUgbmFtZSBvZiB0aGUgY2hlY2tib3guXG4gICAgLy8vIEBkZWZhdWx0IFtcIlwiXVxuICAgIG5hbWU_OiBzdHJpbmc7XG5cbiAgICAvLy8gSGFuZGxlIHRoZSBjaGVja2JveCdzIGBjaGFuZ2VgIGV2ZW50LlxuICAgIC8vLyBAZGVmYXVsdCBbdW5kZWZpbmVkXVxuICAgIG9uQ2hhbmdlPzogKHZhbHVlOiBib29sZWFuLCBldmVudDogRXZlbnQpID0-IHZvaWQ7XG5cbiAgICAvLy8gVGhlIHNpemUgb2YgdGhlIGNoZWNrYm94LlxuICAgIC8vLyBAZGVmYXVsdCBbXCJtZFwiXVxuICAgIHNpemU_OiBTaXplO1xuXG4gICAgcHJpdmF0ZUdyb3VwVmFsdWU_OiBHcm91cFZhbHVlO1xuICAgIHByaXZhdGVHcm91cFZhbHVlSXNPYmplY3Q_OiBib29sZWFuO1xuICAgIHByaXZhdGVJbkdyb3VwPzogYm9vbGVhbjtcbiAgICBwcml2YXRlT25DaGFuZ2VHcm91cD86ICh2YWx1ZTogR3JvdXBWYWx1ZSwgZXZlbnQ6IEV2ZW50KSA9PiB2b2lkO1xuICB9O1xuICBCbG9ja3M6IHtcbiAgICAvLy8gVGhlIGxhYmVsIG9mIHRoZSBjaGVja2JveC5cbiAgICBkZWZhdWx0OiBbXTtcbiAgfTtcbiAgRWxlbWVudDogSFRNTElucHV0RWxlbWVudDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmVsdmV0Q2hlY2tib3ggZXh0ZW5kcyBDb21wb25lbnQ8VmVsdmV0Q2hlY2tib3hTaWduYXR1cmU-IHtcbiAgZ2V0IGdyb3VwVmFsdWVBc0FycmF5KCkge1xuICAgIHJldHVybiAodGhpcy5hcmdzLnByaXZhdGVHcm91cFZhbHVlIHx8IFtdKSBhcyBHcm91cFZhbHVlQXNBcnJheTtcbiAgfVxuXG4gIGdldCBncm91cFZhbHVlQXNPYmplY3QoKSB7XG4gICAgcmV0dXJuICh0aGlzLmFyZ3MucHJpdmF0ZUdyb3VwVmFsdWUgfHwge30pIGFzIEdyb3VwVmFsdWVBc09iamVjdDtcbiAgfVxuXG4gIGdldCBpc0NoZWNrZWRJbkdyb3VwKCkge1xuICAgIGNvbnN0IG5hbWUgPSB0aGlzLmFyZ3MubmFtZSBhcyBzdHJpbmc7XG5cbiAgICBpZiAodGhpcy5hcmdzLnByaXZhdGVHcm91cFZhbHVlSXNPYmplY3QpIHtcbiAgICAgIHJldHVybiB0aGlzLmdyb3VwVmFsdWVBc09iamVjdFtuYW1lXSA9PT0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5ncm91cFZhbHVlQXNBcnJheS5pbmNsdWRlcyhuYW1lKTtcbiAgfVxuXG4gIGNoYW5nZUhhbmRsZXIgPSAoZXZlbnQ6IEV2ZW50KSA9PiB7XG4gICAgaWYgKHRoaXMuYXJncy5pc0Rpc2FibGVkID09PSB0cnVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgeyBjaGVja2VkIH0gPSBldmVudC50YXJnZXQgYXMgSFRNTElucHV0RWxlbWVudDtcbiAgICBjb25zdCB7IHByaXZhdGVJbkdyb3VwLCBvbkNoYW5nZSwgcHJpdmF0ZU9uQ2hhbmdlR3JvdXAgfSA9IHRoaXMuYXJncztcblxuICAgIGlmIChwcml2YXRlSW5Hcm91cCAmJiB0eXBlb2YgcHJpdmF0ZU9uQ2hhbmdlR3JvdXAgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNvbnN0IHsgZ3JvdXBWYWx1ZUFzQXJyYXksIGdyb3VwVmFsdWVBc09iamVjdCB9ID0gdGhpcztcbiAgICAgIGNvbnN0IHsgcHJpdmF0ZUdyb3VwVmFsdWVJc09iamVjdCwgbmFtZSB9ID0gdGhpcy5hcmdzO1xuXG4gICAgICBsZXQgZ3JvdXBWYWx1ZTtcblxuICAgICAgaWYgKHByaXZhdGVHcm91cFZhbHVlSXNPYmplY3QpIHtcbiAgICAgICAgZ3JvdXBWYWx1ZSA9IHsgLi4uZ3JvdXBWYWx1ZUFzT2JqZWN0LCBbbmFtZSBhcyBzdHJpbmddOiBjaGVja2VkIH07XG4gICAgICB9IGVsc2UgaWYgKGNoZWNrZWQpIHtcbiAgICAgICAgZ3JvdXBWYWx1ZSA9IFsuLi5ncm91cFZhbHVlQXNBcnJheSwgbmFtZV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBncm91cFZhbHVlID0gZ3JvdXBWYWx1ZUFzQXJyYXkuZmlsdGVyKChuKSA9PiBuICE9PSBuYW1lKTtcbiAgICAgIH1cblxuICAgICAgcHJpdmF0ZU9uQ2hhbmdlR3JvdXAoZ3JvdXBWYWx1ZSBhcyBHcm91cFZhbHVlLCBldmVudCk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygb25DaGFuZ2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIG9uQ2hhbmdlKGNoZWNrZWQsIGV2ZW50KTtcbiAgICB9XG4gIH07XG5cbiAgPHRlbXBsYXRlPlxuICAgIDxsYWJlbFxuICAgICAgY2xhc3M9e3tjblxuICAgICAgICBcInZlbHZldC1jaGVja2JveFwiXG4gICAgICAgIChjb25jYXQgXCJ2ZWx2ZXQtY2hlY2tib3gtXCIgKG9yIEBzaXplIFwibWRcIikpXG4gICAgICAgIChpZiBAaXNEaXNhYmxlZCBcInZlbHZldC1jaGVja2JveC1kaXNhYmxlZFwiKVxuICAgICAgfX1cbiAgICA-XG4gICAgICA8aW5wdXRcbiAgICAgICAgY2hlY2tlZD17e2lmIEBwcml2YXRlSW5Hcm91cCB0aGlzLmlzQ2hlY2tlZEluR3JvdXAgQGlzQ2hlY2tlZH19XG4gICAgICAgIGNsYXNzPVwidmVsdmV0LWNoZWNrYm94LWlucHV0IGZvcm0tY2hlY2tib3hcIlxuICAgICAgICBkaXNhYmxlZD17e0Bpc0Rpc2FibGVkfX1cbiAgICAgICAgaW5kZXRlcm1pbmF0ZT17e0Bpc0luZGV0ZXJtaW5hdGV9fVxuICAgICAgICBuYW1lPXt7QG5hbWV9fVxuICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICB7e29uIFwiY2hhbmdlXCIgdGhpcy5jaGFuZ2VIYW5kbGVyfX1cbiAgICAgICAgLi4uYXR0cmlidXRlc1xuICAgICAgLz5cbiAgICAgIHt7eWllbGR9fVxuICAgIDwvbGFiZWw-XG4gIDwvdGVtcGxhdGU-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"],"names":["VelvetCheckbox","Component","groupValueAsArray","args","privateGroupValue","groupValueAsObject","isCheckedInGroup","name","privateGroupValueIsObject","includes","changeHandler","event","isDisabled","checked","target","privateInGroup","onChange","privateOnChangeGroup","groupValue","filter","n","setComponentTemplate","precompileTemplate","strictMode","scope","cn","concat","or","on"],"mappings":";;;;;;;;AAmDe,MAAMA,cAAA,SAAuBC,SAAA,CAAU;AACpD,EAAA,IAAIC,oBAAoB;AACtB,IAAA,OAAQ,IAAI,CAACC,IAAI,CAACC,iBAAiB,IAAI,EAAE;AAC3C;AAEA,EAAA,IAAIC,qBAAqB;AACvB,IAAA,OAAQ,IAAI,CAACF,IAAI,CAACC,iBAAiB,IAAI,EAAE;AAC3C;AAEA,EAAA,IAAIE,mBAAmB;AACrB,IAAA,MAAMC,IAAA,GAAO,IAAI,CAACJ,IAAI,CAACI,IAAc;AAErC,IAAA,IAAI,IAAI,CAACJ,IAAI,CAACK,yBAAyB,EAAE;AACvC,MAAA,OAAO,IAAI,CAACH,kBAAkB,CAACE,IAAA,CAAK,KAAK,IAAA;AAC3C;AAEA,IAAA,OAAO,IAAI,CAACL,iBAAiB,CAACO,QAAQ,CAACF,IAAA,CAAA;AACzC;AAEAG,EAAAA,aAAA,GAAiBC,KAAO,IAAA;AACtB,IAAA,IAAI,IAAI,CAACR,IAAI,CAACS,UAAU,KAAK,IAAM,EAAA;AACjC,MAAA;AACF;IAEA,MAAM;AAAEC,MAAAA;KAAS,GAAGF,KAAA,CAAMG,MAAU;IACpC,MAAM;MAAEC,cAAc;MAAEC,QAAQ;AAAEC,MAAAA;KAAsB,GAAG,IAAI,CAACd,IAAI;AAEpE,IAAA,IAAIY,cAAA,IAAkB,OAAOE,oBAAA,KAAyB,UAAY,EAAA;MAChE,MAAM;QAAEf,iBAAiB;AAAEG,QAAAA;AAAkB,OAAE,GAAG,IAAI;MACtD,MAAM;QAAEG,yBAAyB;AAAED,QAAAA;OAAM,GAAG,IAAI,CAACJ,IAAI;AAErD,MAAA,IAAIe,UAAA;AAEJ,MAAA,IAAIV,yBAAA,EAA2B;AAC7BU,QAAAA,UAAA,GAAa;AAAE,UAAA,GAAGb,kBAAkB;AAAE,UAAA,CAACE,IAAA,GAAiBM;AAAQ,SAAA;OAC3D,MAAA,IAAIA,OAAA,EAAS;AAClBK,QAAAA,UAAA,GAAa,IAAIhB,iBAAA,EAAmBK,IAAA,CAAK;OACpC,MAAA;QACLW,UAAA,GAAahB,iBAAA,CAAkBiB,MAAM,CAAEC,CAAA,IAAMA,CAAA,KAAMb,IAAA,CAAA;AACrD;MAEAU,oBAAA,CAAqBC,UAAA,EAA0BP,KAAA,CAAA;AACjD,KAAA,MAAO,IAAI,OAAOK,QAAA,KAAa,UAAY,EAAA;MACzCA,QAAA,CAASH,OAAA,EAASF,KAAA,CAAA;AACpB;AACF,GAAA;AAEA,EAAA;IAAAU,oBAAA,CAAAC,kBAAA,CAoBA,gcAAA,EAAA;MAAAC,UAAA,EAAA,IAAA;AAAAC,MAAAA,KAAA,EAAAA,OAAA;QAAAC,EAAA;QAAAC,MAAA;QAAAC,EAAA;AAAAC,QAAAA;AAAA,OAAA;AAAU,KAAA,CAAA,EAAV,IAAW,CAAA;AAAD;AACZ;;;;"}