{"version":3,"file":"index.js","sources":["../../src/test-support/index.ts"],"sourcesContent":["import { assert } from '@ember/debug';\nimport { find, select } from '@ember/test-helpers';\n\ninterface VelvetSelectOptions {\n  index?: number;\n  text?: string;\n}\n\nexport function velvetSelect(\n  target: Parameters<typeof find>[0],\n  { index, text }: VelvetSelectOptions,\n) {\n  const element = find(target);\n\n  assert(\n    `[velvetSelect] No \\`select\\` element found matching \\`${target}\\`.`,\n    element instanceof HTMLSelectElement,\n  );\n\n  let option;\n\n  if (typeof index === 'number') {\n    option = element.options[index];\n  } else {\n    option = [...element.options].find((option) => option.text === text);\n  }\n\n  assert(\n    '[velvetSelect] No `option` element found matching the provided `index` or `text` value.',\n    option,\n  );\n\n  return select(element, option.value);\n}\n"],"names":["velvetSelect","target","index","text","element","find","assert","HTMLSelectElement","option","options","select","value"],"mappings":";;;AAQO,SAASA,YAAYA,CAC1BC,MAAkC,EAClC;EAAEC,KAAK;AAAEC,EAAAA;AAA0B,CAAC,EACpC;AACA,EAAA,MAAMC,OAAO,GAAGC,IAAI,CAACJ,MAAM,CAAC;EAE5BK,MAAM,CACJ,yDAAyDL,MAAM,CAAA,GAAA,CAAK,EACpEG,OAAO,YAAYG,iBACrB,CAAC;AAED,EAAA,IAAIC,MAAM;AAEV,EAAA,IAAI,OAAON,KAAK,KAAK,QAAQ,EAAE;AAC7BM,IAAAA,MAAM,GAAGJ,OAAO,CAACK,OAAO,CAACP,KAAK,CAAC;AACjC,GAAC,MAAM;AACLM,IAAAA,MAAM,GAAG,CAAC,GAAGJ,OAAO,CAACK,OAAO,CAAC,CAACJ,IAAI,CAAEG,MAAM,IAAKA,MAAM,CAACL,IAAI,KAAKA,IAAI,CAAC;AACtE;AAEAG,EAAAA,MAAM,CACJ,yFAAyF,EACzFE,MACF,CAAC;AAED,EAAA,OAAOE,MAAM,CAACN,OAAO,EAAEI,MAAM,CAACG,KAAK,CAAC;AACtC;;;;"}